# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master
- stable

pool:
  vmImage: 'VS2017-Win2016'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

name: '$(Build.BuildId)+$(Build.BuildIdOffset)@$(Date:yy.MM.dd)$(Rev:.rr)'

steps:
# Environment setup.
- task: NuGetToolInstaller@0
  displayName: 'Install NuGet'

# Pre-build steps.
- task: NuGetCommand@2
  displayName: 'Restore NuGet packages'
  inputs:
    restoreSolution: '$(solution)'
- task: PowerShell@2
  displayName: 'Run azure-pipelines-prebuild.ps1'
  inputs:
    filePath: 'azure-pipelines-prebuild.ps1'

# Build.
- task: VSBuild@1
  displayName: 'Build'
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# Create and "publish" main artifact.
- task: CopyFiles@2
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  displayName: 'Pack artifact'
  continueOnError: true
  inputs:
    sourceFolder: '$(Agent.BuildDirectory)'
    contents: '**/bin/**/*'
    targetFolder: '$(Build.ArtifactStagingDirectory)'
    cleanTargetFolder: true
    overWrite: true
    flattenFolders: true
- task: PublishBuildArtifacts@1
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  displayName: 'Publish artifact'
  continueOnError: true
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'main'
    publishLocation: 'Container'

- task: PowerShell@2
  displayName: 'Run azure-pipelines-postbuild.ps1'
  inputs:
    filePath: 'azure-pipelines-postbuild.ps1'
    arguments: '$(S3KEY) $(S3SECRET)'
